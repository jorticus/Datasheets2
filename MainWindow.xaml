<Window x:Class="Datasheets2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Datasheets2"
        xmlns:widgets="clr-namespace:Datasheets2.Widgets"
        xmlns:models="clr-namespace:Datasheets2.Models"
        mc:Ignorable="d"
        Title="Datasheets" Height="360" Width="280">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox 
                x:Name="txtSearchBox"
                Grid.Column="0" 
                Margin="8" Padding="2"
                HorizontalAlignment="Stretch" VerticalAlignment="Top"
                Height="23" 
                TextWrapping="Wrap"
                Text="{Binding Path=Database.Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                PreviewKeyDown="TextBox_KeyDown"
                KeyUp="TextBox_KeyUp"/>
            <Button
                x:Name="btnSearch"
                Grid.Column="1"
                Margin="0,8,8,8" Padding="8,0"
                Content="Search" Click="btnSearch_Click"
                />
        </Grid>
        <!-- 
        Drag'n'drop on grid element so overlay can receive drop events. 
        Overlay must block hittests from reaching the tree, otherwise DragOver keeps getting 
        fired for every element the mouse moves over, causing the fade to glitch. 
        -->
        <Grid Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
            AllowDrop="True"
            Drop="tree_Drop"
            DragOver="tree_DragOver"
            DragEnter="tree_DragOver"
            DragLeave="tree_DragLeave">
            <widgets:DocumentTreeView
                x:Name="tree"
                Visibility="Visible"
                Database="{Binding Database}"
                PreviewKeyDown="DocumentTreeView_PreviewKeyDown">
            </widgets:DocumentTreeView>
            <widgets:OnlineSearch
                x:Name="search"
                Visibility="Collapsed"/>
            <Border
                VerticalAlignment="Top" HorizontalAlignment="Stretch"
                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"  BorderThickness="1" 
                Height="1"/>
            <Grid
                x:Name="dropOverlay"
                Visibility="Collapsed"
                Margin="0,1,0,0"
                Opacity="1.0"
                IsEnabled="False"
                IsHitTestVisible="True">
                <Grid.Style>
                    <!-- https://stackoverflow.com/questions/1013817/wpf-fade-animation -->
                    <!-- Use IsEnabled property as the "visibility" trigger -->
                    <Style TargetType="Grid">
                        <Style.Resources>
                            <Storyboard x:Key="FadeInMenu">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="{x:Null}">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="FadeOutMenu">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="{x:Null}">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </Style.Resources>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource FadeInMenu}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource FadeOutMenu}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </Style>
                </Grid.Style>
                <Border
                    Opacity="0.8"
                    Background="White"/>
                <TextBlock
                    x:Name="dropText"
                    Padding="8,4"
                    Text=""
                    TextWrapping="Wrap"
                    IsHitTestVisible="False"
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Center"/>
            </Grid>
        </Grid>

    </Grid>
</Window>
